import React, { useState } from 'react';
import {predictNeuralNetwork} from '../../services/neural-networks.service.ts';
import {applianceLabels, initialState, seasonLabels} from "../../constants/general.constant.ts";
import type {EnergyInput, EnergyOutput} from "../../interfaces/energy.interface.ts";

export default function NeuralNetworksComponent() {
    const [formData, setFormData] = useState<EnergyInput>(initialState);
    const [result, setResult] = useState<EnergyOutput | null>(null);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState('');

    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
        const { name, value } = e.target;
        setFormData(prev => ({
            ...prev,
            [name]: name === 'appliance_type' || name === 'season' || name === 'household_size' || name === 'time'
                ? Number(value)
                : value
        }));
    };

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        setLoading(true);
        setError('');
        setResult(null);
        try {
            const response = await predictNeuralNetwork(formData);
            setResult(response);
        } catch (err) {
            setError('Error al obtener la predicci√≥n. Revisa tu conexi√≥n o los datos ingresados.');
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="max-w-4xl mx-auto my-10 px-4">
            <section className="card">
                <h1 className="text-3xl font-bold mb-4 text-center">Predicci√≥n de Consumo Energ√©tico con Redes Neuronales</h1>
                <p className="text-gray-700 mb-2 text-center">
                    Las redes neuronales son modelos computacionales inspirados en el funcionamiento del cerebro humano, dise√±ados para reconocer patrones complejos en grandes vol√∫menes de datos.
                </p>
                <p className="text-gray-700 mb-4 text-center">
                    En esta aplicaci√≥n, utilizamos una red neuronal para predecir el consumo energ√©tico por hora (en kWh) de un hogar, en funci√≥n del tipo de electrodom√©stico, la hora del d√≠a, la estaci√≥n del a√±o, la temperatura exterior y el tama√±o del hogar. Esto permite estimar el consumo diario, semanal y mensual, facilitando la planificaci√≥n energ√©tica y promoviendo un uso m√°s eficiente de los recursos.
                </p>
            </section>

            <div className="card mb-8">
                <form onSubmit={handleSubmit} className="grid grid-cols-1 sm:grid-cols-2 gap-6">
                    <div>
                        <label className="block text-sm font-medium">Hora del d√≠a (0-23)</label>
                        <input
                            type="number"
                            name="time"
                            value={formData.time}
                            onChange={handleChange}
                            min="0" max="23"
                            required
                        />
                    </div>

                    <div>
                        <label className="block text-sm font-medium">Temperatura Exterior (¬∞C)</label>
                        <input
                            type="number"
                            name="temperature"
                            value={formData.temperature}
                            onChange={handleChange}
                            required
                        />
                    </div>

                    <div>
                        <label className="block text-sm font-medium">Tama√±o del Hogar</label>
                        <input
                            type="number"
                            name="household_size"
                            value={formData.household_size}
                            onChange={handleChange}
                            required
                        />
                    </div>

                    <div>
                        <label className="block text-sm font-medium">Electrodom√©stico</label>
                        <select
                            name="appliance_type"
                            value={formData.appliance_type}
                            onChange={handleChange}
                        >
                            {applianceLabels.map((label, idx) => (
                                <option key={idx} value={idx}>{label}</option>
                            ))}
                        </select>
                    </div>

                    <div>
                        <label className="block text-sm font-medium">Estaci√≥n del A√±o</label>
                        <select
                            name="season"
                            value={formData.season}
                            onChange={handleChange}
                        >
                            {seasonLabels.map((label, idx) => (
                                <option key={idx} value={idx}>{label}</option>
                            ))}
                        </select>
                    </div>

                    <div className="sm:col-span-2 flex justify-end">
                        <button
                            type="submit"
                            disabled={loading}
                            className="btn"
                        >
                            {loading ? 'Calculando...' : 'Predecir'}
                        </button>
                    </div>
                </form>
            </div>

            {result && (
                <div className="success">
                    <h2 className="font-semibold mb-1">Resultado:</h2>
                    <p>‚ö° <strong>Consumo estimado por hora:</strong> {result.predicted_kwh} kWh</p>
                    <p>üìÖ <strong>Consumo diario:</strong> {result.daily} kWh</p>
                    <p>üóì <strong>Consumo semanal:</strong> {result.weekly} kWh</p>
                    <p>üìÜ <strong>Consumo mensual:</strong> {result.monthly} kWh</p>
                    <p>üìä <strong>Categor√≠a:</strong> {result.category}</p>
                </div>
            )}

            {error && (
                <div className="error">
                    {error}
                </div>
            )}
        </div>
    );
}
